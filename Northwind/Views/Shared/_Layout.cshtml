@{
	string areaName = ViewBag.WidgetAreaName;
	string assemblyName = ViewBag.WidgetAssemblyName;
	string areaAlias = string.Format("{0}_Area", areaName);
}

<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>@ViewBag.Title - @ViewBag.WidgetAssemblyName</title>

	@(new jquerybasic() { SelectedSkin = jquerybasic.jQueryTheme.Silver })

	@if (Helper.UseBootstrap5) {
		@(new Bootstrap5() { SelectedSkin = Helper.Bootstrap5ColorScheme })
	} else {
		@(new Bootstrap() { SelectedSkin = Helper.BootstrapColorScheme })
	}

	<script>
		$(document).ready(function () {
			fixButtons();
		});

		$(document).ajaxComplete(function (event, xhr, settings) {
			fixButtons();
			setTimeout("fixButtons();", 500);
		});

		function fixButtons() {
			$("button").addClass('btn btn-lg');
			$("input[type=button]").addClass('btn btn-lg btn-default');
			$("input[type=submit]").addClass('btn btn-lg btn-default');
			$("input[type=text]").addClass('form-control');
			$("input[type=password]").addClass('form-control');
			$("select").addClass('form-control');
		}
	</script>

	<link href="~/Content/chosen.css" rel="stylesheet" />
	<script src="~/Scripts/chosen.jquery.js"></script>

	<link href="~/assets/jquery.ui.timepicker.css" rel="stylesheet" />
	<script src="~/Scripts/jquery.ui.timepicker.js"></script>

	<script src="~/Scripts/Common.js"></script>
	<link href="~/Content/Site.css" rel="stylesheet" />
</head>
<body>
	@if (Helper.UseBootstrap5) {
		<nav class="navbar navbar-expand-lg navbar-dark bg-primary" aria-label="navbar">
			<div class="container-xl">
				@Html.ActionLink(string.Format("{0}  (Core)", assemblyName), "Index", "Home", null, new { @class = "navbar-brand" })
				<button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#collapsibleNavbar" aria-controls="collapsibleNavbar" aria-expanded="false" aria-label="Toggle navigation">
					<span class="navbar-toggler-icon"></span>
				</button>

				<div class="collapse navbar-collapse" id="collapsibleNavbar">
					<ul class="navbar-nav me-auto mb-2 mb-lg-0">
						@using (Html.CarrotWeb().BeginWrappedItem("li", "Index", "Home", new { @class = "nav-item active" }, new { @class = "nav-item" })) {
							@Html.ActionLink("Home", "Index", "Home", null, new { @class = "nav-link" })
						}
						@using (Html.CarrotWeb().BeginWrappedItem("li", "Sampler", "Home", new { @class = "nav-item active" }, new { @class = "nav-item" })) {
							@Html.ActionLink("Sampler", "Sampler", "Home", null, new { @class = "nav-link" })
						}
						@using (Html.CarrotWeb().BeginWrappedItem("li", "Contact", "Home", new { @class = "nav-item active" }, new { @class = "nav-item" })) {
							@Html.ActionLink("Contact", "Contact", "Home", null, new { @class = "nav-link" })
						}

						@using (Html.CarrotWeb().BeginWrappedItem("li", "TestMath;TestProductSearch;TestProductSearchMulti", "Home", new { @class = "active dropdown" }, new { @class = "dropdown" })) {
							<a class="nav-link dropdown-toggle" href="#" data-bs-toggle="dropdown" aria-expanded="false">Public Test</a>
							<ul class="dropdown-menu">
								<li>@Html.ActionLink("Math", "TestMath", "Home", null, new { @class = "nav-link" })</li>
								<li>@Html.ActionLink("Product Search", "TestProductSearch", "Home", null, new { @class = "nav-link" })</li>
								<li>@Html.ActionLink("Product Search Multi", "TestProductSearchMulti", "Home", null, new { @class = "nav-link" })</li>
							</ul>
						}

						@using (Html.CarrotWeb().BeginWrappedItem("li", "*", "Admin", new { @class = "active dropdown" }, new { @class = "dropdown" })) {
							<a class="nav-link dropdown-toggle" href="#" data-bs-toggle="dropdown" aria-expanded="false">Admin Test  </a>
							<ul class="dropdown-menu">
								<li>@Html.ActionLink("Math", "Math", "Admin", null, new { @class = "nav-link" })</li>
								<li>@Html.ActionLink("Employees", "Employees", "Admin", null, new { @class = "nav-link" })</li>
								<li>@Html.ActionLink("Suppliers", "Suppliers", "Admin", null, new { @class = "nav-link" })</li>
								<li>@Html.ActionLink("Products", "Products", "Admin", null, new { @class = "nav-link" })</li>
								<li>@Html.ActionLink("Products 2", "Products2", "Admin", null, new { @class = "nav-link" })</li>
							</ul>
						}
					</ul>
				</div>
			</div>
		</nav>
	} else {
		<div class="navbar navbar-inverse navbar-fixed-top">
			<div class="container">
				<div class="navbar-header">
					<button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
						<span class="icon-bar"></span>
						<span class="icon-bar"></span>
						<span class="icon-bar"></span>
					</button>
					@Html.ActionLink(string.Format("{0}  (Core)", assemblyName), "Index", "Home", null, new { @class = "navbar-brand" })
				</div>

				<div class="navbar-collapse collapse">
					<ul class="nav navbar-nav">
						@using (Html.CarrotWeb().BeginWrappedItem("li", "Index", "Home", new { @class = "active" }, null)) {
							@Html.ActionLink("Home", "Index", "Home")
						}
						@using (Html.CarrotWeb().BeginWrappedItem("li", "Sampler", "Home", new { @class = "active" }, null)) {
							@Html.ActionLink("Sampler", "Sampler", "Home")
						}
						@using (Html.CarrotWeb().BeginWrappedItem("li", "Contact", "Home", new { @class = "active" }, null)) {
							@Html.ActionLink("Contact", "Contact", "Home")
						}

						@using (Html.CarrotWeb().BeginWrappedItem("li", "TestMath;TestProductSearch;TestProductSearchMulti", "Home", new { @class = "active dropdown" }, new { @class = "dropdown" })) {
							<a href="#" class="dropdown-toggle" data-toggle="dropdown">Public Test <b class="caret"></b></a>
							<ul class="dropdown-menu">
								<li>@Html.ActionLink("Math", "TestMath", "Home")</li>
								<li>@Html.ActionLink("Product Search", "TestProductSearch", "Home")</li>
								<li>@Html.ActionLink("Product Search Multi", "TestProductSearchMulti", "Home")</li>
							</ul>
						}

						@using (Html.CarrotWeb().BeginWrappedItem("li", "*", "Admin", new { @class = "active dropdown" }, new { @class = "dropdown" })) {
							<a href="#" class="dropdown-toggle" data-toggle="dropdown">Admin Test <b class="caret"></b></a>
							<ul class="dropdown-menu">
								<li>@Html.ActionLink("Math", "Math", "Admin")</li>
								<li>@Html.ActionLink("Employees", "Employees", "Admin")</li>
								<li>@Html.ActionLink("Suppliers", "Suppliers", "Admin")</li>
								<li>@Html.ActionLink("Products", "Products", "Admin")</li>
								<li>@Html.ActionLink("Products 2", "Products2", "Admin")</li>
							</ul>
						}
					</ul>
				</div>
			</div>
		</div>
	}

	<br />
	<br />
	<div class="container body-content">
		<main>
			@RenderBody()
		</main>
		<hr />
		<footer>
			<p>&copy; @DateTime.Now.Year - @ViewBag.WidgetAssemblyName</p>
		</footer>
	</div>

	@RenderSection("scripts", required: false)
</body>
</html>